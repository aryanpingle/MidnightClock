@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap');

:root {
    font-family: 'Roboto Mono', Courier, monospace;
}

* {
    box-sizing: border-box;
}

a {
    text-decoration: none;
    color: inherit;
}

html, body {
    height: 100vh;
    height: fill-available;
    height: -moz-fill-available;
    height: -webkit-fill-available;
}

body {
    background-color: #000000;
    color: white;
    margin: 0;
    position: relative;
}

@media (min-width: 720px) {
    body {
        height: 100vh;
    }
}

#page {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Actual Stuff */

#time-as-text {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    text-shadow: 0 0 3px black;

    font-size: 2.5em;
}

#time-as-text > span {
    font-size: 1.5em;
    font-weight: 700;
}

svg {
    width: 90vmin;
    aspect-ratio: 1 / 1;
    shape-rendering: crispEdges;
    /* background-color: antiquewhite; */
}

.countdown-element {
    --path-length: 86400;
    --time-elapsed: 0;
    shape-rendering: geometricPrecision;
    --accent: deepskyblue;
    --stroke-width: 50;
}

#hours-left-group {
    --accent: hsl(0, 100%, 75%);
    --divisions: 24;
}

#minutes-left-group {
    --accent: hsl(120, 100%, 75%);
    --divisions: 60;
}

#seconds-left-group {
    --accent: hsl(240, 100%, 75%);
    --divisions: 60;
}

.countdown-element > circle {
    fill: none;
    position: relative;
    transform-origin: center;
    transform: rotate(-90deg);
}

.countdown__track {
    stroke: rgba(255, 255, 255, 0.1);
    stroke: var(--accent);
    stroke-width: calc(var(--stroke-width) / 1.25);
    --half-empty-space: calc(86400 / var(--divisions) / 20);
    --filled-space: calc(86400 / var(--divisions) - 2 * var(--half-empty-space));
    /* For uniform half sized empty spaces on either side, we do: 0 fill, half empty, filled space, half empty */
    stroke-dasharray: 0 var(--half-empty-space) var(--filled-space) var(--half-empty-space);
}

.countdown__arc {
    stroke-dasharray: var(--path-length) var(--path-length);
    stroke-dashoffset: calc(var(--path-length) - var(--time-elapsed));
    stroke: #000000;
    stroke-width: calc(var(--stroke-width));
}

@media (max-width: 1024px) {
    #page {
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
    }

    #time-as-text {
        position: relative;
        height: 2%;
        font-size: 4em;
    }

    svg {
        width: 85%;
        height: 50%;
    }
}

@media (max-width: 640px) {
    #time-as-text {
        font-size: 2.5em;
    }
}